//+mro-ignore
// DO NOT EDIT THIS FILE
// Generated by mro at 2021-07-19 17:17:32
package postgres

import (
	context "context"
	dbutil162 "github.com/seerx/gpa/rt/dbutil"
	models "github.com/seerx/gpa/examples/pratics/models"
	rt59 "github.com/seerx/gpa/rt"
	sql511 "database/sql"
)

type FindBy struct {
	p *rt59.Provider
}

func (findBy *FindBy) FindAById(ctx context.Context, id uint64) (*models.User, error){
    var err error
	sql := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var sqlParams []interface{}
	// where 参数
	sqlParams = append(sqlParams, id)
    
    var2 := findBy.p.Executor().QueryContextRow(ctx, sql, sqlParams...)
	
    var1 := &models.User{}
    var var3 dbutil162.NullTime
    err = var2.Scan(&var1.ID, &var1.Name, &var1.Age, &var1.Gender, &var1.OkaUsURL, &var3, &var1.URL)
    if err != nil {
        return nil, err
    }
    
    var1.Cret = var3.Time()
	return var1, nil
}

func (findBy *FindBy) FindById(id uint64) (models.User, error){
    var err error
	sql := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var sqlParams []interface{}
	// where 参数
	sqlParams = append(sqlParams, id)
    
    var2 := findBy.p.Executor().QueryRow(sql, sqlParams...)
    var1 := models.User{}
    var var3 dbutil162.NullTime
    err = var2.Scan(&var1.ID, &var1.Name, &var1.Age, &var1.Gender, &var1.OkaUsURL, &var3, &var1.URL)
    if err != nil {
        return models.User{}, err
    }
    
    var1.Cret = var3.Time()
	return var1, nil
}

func (findBy *FindBy) FindXuByName(name string) ([]*models.User, error){
    var err error
	sql := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE name=? "
	var sqlParams []interface{}
	// where 参数
	sqlParams = append(sqlParams, name)
    
    var var2 *sql511.Rows
	var2, err = findBy.p.Executor().QueryRows(sql, sqlParams...)
	if err != nil {
		return nil,  err
	}
	
	var2Results := []*models.User{}
	for var2.Next() {
        var1 := &models.User{}
        var var3 dbutil162.NullTime
        err = var2.Scan(&var1.ID, &var1.Name, &var1.Age, &var1.Gender, &var1.OkaUsURL, &var3, &var1.URL)
        if err != nil {
            return nil,  err
        }
        
        var1.Cret = var3.Time()
		var2Results = append(var2Results, var1)
	}
	return var2Results, nil
}

func (findBy *FindBy) FindMapByName(name string, kg func(*models.User) uint64) (map[uint64]*models.User, error){
    var err error
	sql := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE name=? "
	var sqlParams []interface{}
	// where 参数
	sqlParams = append(sqlParams, name)
    
    var var2 *sql511.Rows
	var2, err = findBy.p.Executor().QueryRows(sql, sqlParams...)
	if err != nil {
		return nil,  err
	}
	
	var2Results := map[uint64]*models.User{}
	for var2.Next() {
        var1 := &models.User{}
        var var3 dbutil162.NullTime
        err = var2.Scan(&var1.ID, &var1.Name, &var1.Age, &var1.Gender, &var1.OkaUsURL, &var3, &var1.URL)
        if err != nil {
            return nil,  err
        }
        
        var1.Cret = var3.Time()
		var2Results[kg(var1)] = var1
	}
	return var2Results, nil
}

func (findBy *FindBy) FindCbById(id uint64, fn func(*models.User) error) error{
    var err error
	sql := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var sqlParams []interface{}
	// where 参数
	sqlParams = append(sqlParams, id)
    
    var var2 *sql511.Rows
	var2, err = findBy.p.Executor().QueryRows(sql, sqlParams...)
	if err != nil {
		return  err
	}
	
	var1 := &models.User{}
	for var2.Next() {
        var var3 dbutil162.NullTime
        err = var2.Scan(&var1.ID, &var1.Name, &var1.Age, &var1.Gender, &var1.OkaUsURL, &var3, &var1.URL)
        if err != nil {
            return  err
        }
        
        var1.Cret = var3.Time()
		if err = fn(var1); err != nil {
			return err
		}
	}
	return nil
}
