//+mro-ignore
// DO NOT EDIT THIS FILE
// Generated by mro at 2021-07-21 09:56:46
package postgres

import (
	context "context"
	dbutil162 "github.com/seerx/gpa/rt/dbutil"
	models "github.com/seerx/gpa/examples/pratics/models"
	rt59 "github.com/seerx/gpa/rt"
	sql511 "database/sql"
)

type FindBy struct {
	p *rt59.Provider
}

func (findBy *FindBy) FindAById(ctx context.Context, id uint64) (*models.User, error){
    var err error
	var1 := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var var1Params []interface{}
	// where 参数
	var1Params = append(var1Params, id)
    
    var3 := findBy.p.Executor().QueryContextRow(ctx, var1, var1Params...)
	
    var2 := &models.User{}
    var var4 dbutil162.NullTime
    if err = var3.Scan(&var2.ID, &var2.Name, &var2.Age, &var2.Gender, &var2.OkaUsURL, &var4, &var2.URL); err != nil {
        return nil, err
    }
    
    var2.Cret = var4.Time()
	return var2, nil
}

func (findBy *FindBy) FindById(id uint64) (models.User, error){
    var err error
	var1 := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var var1Params []interface{}
	// where 参数
	var1Params = append(var1Params, id)
    
    var3 := findBy.p.Executor().QueryRow(var1, var1Params...)
    var2 := models.User{}
    var var4 dbutil162.NullTime
    if err = var3.Scan(&var2.ID, &var2.Name, &var2.Age, &var2.Gender, &var2.OkaUsURL, &var4, &var2.URL); err != nil {
        return models.User{}, err
    }
    
    var2.Cret = var4.Time()
	return var2, nil
}

func (findBy *FindBy) FindXuByName(name string) ([]*models.User, error){
    var err error
	var1 := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE name=? "
	var var1Params []interface{}
	// where 参数
	var1Params = append(var1Params, name)
    
    var var3 *sql511.Rows
	var3, err = findBy.p.Executor().QueryRows(var1, var1Params...)
	if err != nil {
		return nil,  err
	}
	
	var3Results := []*models.User{}
	for var3.Next() {
		
        var2 := new(models.User)
        var var4 dbutil162.NullTime
        if err = var3.Scan(&var2.ID, &var2.Name, &var2.Age, &var2.Gender, &var2.OkaUsURL, &var4, &var2.URL); err != nil {
            return nil,  err
        }
        
        var2.Cret = var4.Time()
		var3Results = append(var3Results, var2)
	}
	return var3Results, nil
}

func (findBy *FindBy) FindMapByName(name string, kg func(*models.User) (uint64, error)) (map[uint64]*models.User, error){
    var err error
	var1 := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE name=? "
	var var1Params []interface{}
	// where 参数
	var1Params = append(var1Params, name)
    
    var var3 *sql511.Rows
	var3, err = findBy.p.Executor().QueryRows(var1, var1Params...)
	if err != nil {
		return nil,  err
	}
	
	var3Results := map[uint64]*models.User{}
	for var3.Next() {
		var var2Key uint64
        var2 := new(models.User)
        var var4 dbutil162.NullTime
        if err = var3.Scan(&var2.ID, &var2.Name, &var2.Age, &var2.Gender, &var2.OkaUsURL, &var4, &var2.URL); err != nil {
            return nil,  err
        }
        
        var2.Cret = var4.Time()
		if var2Key, err = kg(var2); err != nil {
			return nil, err
		}
		var3Results[var2Key] = var2
	}
	return var3Results, nil
}

func (findBy *FindBy) FindCbById(id uint64, fn func(*models.User) (error)) error{
    var err error
	var1 := "SELECT id,name,age,gender,oka_us_url,cret,url FROM user WHERE id=? "
	var var1Params []interface{}
	// where 参数
	var1Params = append(var1Params, id)
    
    var var3 *sql511.Rows
	var3, err = findBy.p.Executor().QueryRows(var1, var1Params...)
	if err != nil {
		return  err
	}
	
	var2 := &models.User{}
	for var3.Next() {
        var var4 dbutil162.NullTime
        if err = var3.Scan(&var2.ID, &var2.Name, &var2.Age, &var2.Gender, &var2.OkaUsURL, &var4, &var2.URL); err != nil {
            return  err
        }
        
        var2.Cret = var4.Time()
		if err = fn(var2); err != nil {
			return err
		}
	}
	return nil
}
