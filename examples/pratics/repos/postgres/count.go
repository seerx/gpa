//+mro-ignore
// DO NOT EDIT THIS FILE
// Generated by mro at 2021-07-21 10:39:34
package postgres

import (
	models "github.com/seerx/gpa/examples/pratics/models"
	rt81 "github.com/seerx/gpa/rt"
)

type Count struct {
	p *rt81.Provider
}

func (count *Count) CountByName(user *models.User) (int64, models.User, error) {
	var err error
	var1 := "SELECT count(0) FROM user WHERE name=? "
	var2 := count.p.Executor().QueryRow(var1, user.Name)
	var var3 int64
	err = var2.Scan(&var3)
	if err != nil {
		return 0, models.User{}, err
	}
	return var3, models.User{}, nil
}

func (count *Count) CountName(user *models.User, name string) (int64, error) {
	var err error
	var1 := "SELECT count(*) FROM user WHERE id=? and age>?"
	var2 := count.p.Executor().QueryRow(var1, user.ID, user.Age)
	var var3 int64
	err = var2.Scan(&var3)
	if err != nil {
		return 0, err
	}
	return var3, nil
}

func (count *Count) CountXName(user *models.User, name string) (int64, error) {
	var err error
	var1 := "SELECT count(1) FROM user WHERE id = ? and age>?"
	var2 := count.p.Executor().QueryRow(var1, user.ID, user.Age)
	var var3 int64
	err = var2.Scan(&var3)
	if err != nil {
		return 0, err
	}
	return var3, nil
}
