//+mro-ignore
// DO NOT EDIT THIS FILE
// Generated by mro at 2021-07-21 09:56:48
package postgres

import (
	dbutil211 "github.com/seerx/gpa/rt/dbutil"
	models "github.com/seerx/gpa/examples/pratics/models"
	rt425 "github.com/seerx/gpa/rt"
	sql445 "database/sql"
)

type Update struct {
	p *rt425.Provider
}

func (update *Update) UpdateXuByIdAndAge(user *models.User) error {
	var err error
	
	var var2tp *dbutil211.TimeProp
	var2tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return err
	}
	var2 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var2tp,
		user.Cret)
	var1 := "UPDATE user SET name=?,gender=?,oka_us_url=?,cret=?,url=? WHERE id=? And age=? "
	var1Params := []interface{}{user.Name, user.Gender, user.OkaUsURL, var2, user.URL}
	// where 参数
	var1Params = append(var1Params, user.ID)
	var1Params = append(var1Params, user.Age)
	
	_, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return err
	}
	
	return nil
}

func (update *Update) UpdateByName(user *models.User, gender bool) (int64, error) {
	user.Gender = gender
	var err error
	
	var var4tp *dbutil211.TimeProp
	var4tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return 0, err
	}
	var4 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var4tp,
		user.Cret)
	var1 := "UPDATE user SET age=?,gender=?,oka_us_url=?,cret=?,url=? WHERE name=? "
	var1Params := []interface{}{user.Age, user.Gender, user.OkaUsURL, var4, user.URL}
	// where 参数
	var1Params = append(var1Params, user.Name)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, err
	}
	return var3, nil
}

func (update *Update) UpdateByAgeAndCret(user *models.User) (int64, *models.User, error) {
	var err error
	
	var var4tp *dbutil211.TimeProp
	var4tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return 0, nil, err
	}
	var4 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var4tp,
		user.Cret)
	var1 := "UPDATE user SET name=?,gender=?,oka_us_url=?,url=? WHERE age=? And cret=? "
	var1Params := []interface{}{user.Name, user.Gender, user.OkaUsURL, user.URL}
	// where 参数
	var1Params = append(var1Params, user.Age)
	var1Params = append(var1Params, var4)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, nil, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, nil, err
	}
	return var3, user, nil
}

func (update *Update) UpdateXByAge(age int, URL string) (int64, models.User, error) {
	var4 := &models.User{}
	var4.Age = age
	var4.URL = URL
	var err error
	var1 := "UPDATE user SET url=? WHERE age=? "
	var1Params := []interface{}{URL}
	// where 参数
	var1Params = append(var1Params, age)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, models.User{}, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, models.User{}, err
	}
	return var3, *var4, nil
}

func (update *Update) UpdateName(user *models.User, name string) (int64, error) {
	user.Name = name
	var err error
	
	var var4tp *dbutil211.TimeProp
	var4tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return 0, err
	}
	var4 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var4tp,
		user.Cret)
	var1 := "UPDATE \"user\" SET \"name\"=?,url=?,cret=? WHERE id=? and age>?"
	var1Params := []interface{}{name, user.URL, var4}
	// where 参数
	var1Params = append(var1Params, user.ID)
	var1Params = append(var1Params, user.Age)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, err
	}
	return var3, nil
}

func (update *Update) UpdateXName(user *models.User, name string) (int64, error) {
	user.Name = name
	var err error
	
	var var4tp *dbutil211.TimeProp
	var4tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return 0, err
	}
	var4 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var4tp,
		user.Cret)
	var1 := "UPDATE user SET name=?,age=?,gender=?,oka_us_url=?,cret=?,url=? WHERE id=? and age>?"
	var1Params := []interface{}{user.Name, user.Age, user.Gender, user.OkaUsURL, var4, user.URL}
	// where 参数
	var1Params = append(var1Params, user.ID)
	var1Params = append(var1Params, user.Age)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, err
	}
	return var3, nil
}

func (update *Update) UpdateYName(name string) (int64, models.User, error) {
	var4 := &models.User{}
	var4.Name = name
	var err error
	var1 := "UPDATE user SET name=?"
	var1Params := []interface{}{name}
	// where 参数
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, models.User{}, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, models.User{}, err
	}
	return var3, *var4, nil
}

func (update *Update) Update1Name(name string, id uint64) (int64, models.User, error) {
	var4 := &models.User{}
	var4.Name = name
	var err error
	var1 := "UPDATE user SET name=? WHERE id=?"
	var1Params := []interface{}{name}
	// where 参数
	var1Params = append(var1Params, id)
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, models.User{}, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, models.User{}, err
	}
	return var3, *var4, nil
}

func (update *Update) Update2Name(user models.User, ids []uint64) (int64, error) {
	var err error
	
	var var4tp *dbutil211.TimeProp
	var4tp, err = dbutil211.NewTimeProp("DATETIME", true, "")
	if err != nil {
		return 0, err
	}
	var4 := dbutil211.FormatColumnTime(update.p.GetTimeStampzFormat(),
		update.p.GetTimezone(),
		var4tp,
		user.Cret)
	var1 := "UPDATE user SET name=?,age=?,gender=?,oka_us_url=?,cret=?,url=? WHERE name=? or id in (@in-1626832609)"
	var1Params := []interface{}{user.Name, user.Age, user.Gender, user.OkaUsURL, var4, user.URL}
	// where 参数
	var1Params = append(var1Params, user.Name)
	if len(ids) <= 0 {
		return 0, dbutil211.NewErrParamIsEmpty("ids")
	}
	var1 = dbutil211.TakePlaceHolder(var1, "@in-1626832609", len(ids))
	for _, varP := range ids {
		var1Params = append(var1Params, varP)
	}
	var var2 sql445.Result
	var2, err = update.p.Executor().Exec(var1, var1Params...)
	if err != nil {
		return 0, err
	}
	var3, err := var2.RowsAffected()
	if err != nil {
		return var3, err
	}
	return var3, nil
}
